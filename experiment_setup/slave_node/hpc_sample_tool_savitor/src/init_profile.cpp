#include "../include/stdafx.h"

// initialize the profiler
void  profile::init_profile()
{
	
	// Enable profiling
	error_log = fnEnableProfiling();
	if (error_log == S_OK)
		std::cout << "Profiling Successfully Enabled" << std::endl;
	else
	{
		std::cout << "Failed to enable Profile with possible error: " << error_decode(error_log) << std::endl;
		kill_profile();
	}

	//Fetch the driver info
	error_log = fnGetDriverVersion(pMajor, pMinor, pBuild);
	if (error_log == S_OK)
	{
		std::cout << "Driver setup successful" << std::endl;
		std::cout << "Major Minor and Build version of the driver: " << *pMajor << " " << *pMinor << \
			" " << *pBuild << std::endl;
	}
	else
	{
		std::cout << "Failed to setup Driver" << std::endl;
		std::cout << "Exiting with Error status " << error_log << std::endl;
		kill_profile();
	}

	//Clearing all the previous configurations
	error_log = fnClearConfigurations();
	if (error_log == S_OK || error_log == S_FALSE)
	{
		std::cout << "Previous Configurations cleared successfully" << std::endl;
	}
	else
	{
		std::cout << "Clearing configuration failed with possible error " << error_decode(error_log)
			<< std::endl;
		kill_profile();
	}


	return;
}