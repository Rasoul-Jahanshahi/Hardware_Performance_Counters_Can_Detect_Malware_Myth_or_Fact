#pragma once
#include "../include/stdafx.h"

#ifndef sample_timer
#define sample_timer


class Timer
{
public:
	// Handles for to-be spawned threads
	HANDLE mutex;
	HANDLE expiry_timer;

	// Thread Properties
	void *security;
	unsigned stack_size;
	void *arglist;
	unsigned initflag;
	unsigned *thrdaddr;

	// Thread affinity
	// Thread affinity
	DWORD_PTR dwThreadAffinityMask;
	DWORD_PTR thread_affinity;

	// Mutex Properties
	LPSECURITY_ATTRIBUTES lpMutexAttributes;
	BOOL bInitialOwner;
	LPCTSTR lpName;

	// Variables that require atomicity 
	volatile int terminate_timer_flag;

	// stores the time to run the timer
	unsigned int expiry_time;

	// Memeber Funcitons
	Timer( unsigned int* );
	void setup_timer();
	bool release_timer();
};

#endif