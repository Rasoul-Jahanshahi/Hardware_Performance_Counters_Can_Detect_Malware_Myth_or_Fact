import json, itertools, random
import numpy as np
import matplotlib.pyplot as plt
import matplotlib
from sklearn.metrics import roc_curve, auc
from matplotlib.backends.backend_pdf import PdfPages

def read_data():
    #with open('plot_latex_table.json', 'r') as data_file:
    with open('plot_worst_latex_table.json', 'r') as data_file:
        data = json.load(data_file)
    data_file.close()
    return data


def plot_roc(data, fig_name):
    # with open('classification_report_tensorflow.txt', 'r') as data_file:
    #     data_tensorflow = json.load(data_file)
    # data_file.close()

    # for keys in data_tensorflow:
    #     data[keys + "(tensorflow)"] = data_tensorflow[keys]

    
    lw = 2
    line_colors = ['r', 'b', 'c', 'k', 'm']
    line_styles = ['-.', '-', ':']
    line_marker = ['o', '^']
    line_setups = [\
					[line_colors[0], line_styles[0], line_marker[0]],\
					[line_colors[1], line_styles[1], line_marker[1]],\
					[line_colors[2], line_styles[2], line_marker[0]],\
					[line_colors[3], line_styles[0], line_marker[1]],\
					[line_colors[4], line_styles[1], line_marker[0]],\
					[line_colors[0], line_styles[2], line_marker[1]]\
					]
    iterator        = iter(line_setups)
    line_set        = []
    line_name_set   = []
    
    
    font = {\
            'family' : 'serif',\
            'size'   : 20}
    plt.rc('font', **font)

    matplotlib.rcParams['pdf.use14corefonts'] = True
    # matplotlib.rcParams['text.usetex'] = True

    fig, ax = plt.subplots(figsize=(7, 6))
    for clf in data:
        print "plotting " + clf + " ..."        
        if 'roc_auc' in data[clf] and data[clf]['roc_auc'] > 0.60:
            line_config = iterator.next()
            line, = ax.plot(data[clf]['fpr'], data[clf]['tpr'])
            plt.setp(line, linewidth=4, color=line_config[0], markersize=10, linestyle=line_config[1], marker=line_config[2])
            line_set.append(line)
            line_name_set.append("{0}: {1:.4g}%".format(clf,100 * data[clf]['roc_auc']))
            #line_name_set.append(clf + ":" + str(100 * data[clf]['roc_auc']) + "%")
    ax.legend(line_set, line_name_set,\
        framealpha=0,\
        fontsize=18,\
        ncol=1,\
        borderaxespad=0.4,\
        loc='lower right'
        ) 
    # plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')
    plt.xlim([0.0, 1.0])
    plt.ylim([0.0, 1.0])
    plt.xlabel('False Positive Rate')
    plt.ylabel('True Positive Rate')
    plt.title('ROC Curve')
    # plt.legend(loc="lower right")

    savefig_name = PdfPages(fig_name)
    plt.savefig(savefig_name, format='pdf', bbox_inches='tight')
    savefig_name.close()
    plt.show()
    # plt.close()

if __name__ == "__main__":
    data = read_data()
    plot_roc(data, 'figures/roc_curves.pdf')

